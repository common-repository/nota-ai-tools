
  /**
   * We are disabling preflight, but we still want some resets.
   * However, these resets should only apply to our tools and not effect others
   **/
    /*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

    .nota *,
    .nota ::before,
    .nota ::after {
      box-sizing: border-box; /* 1 */
      border-width: 0; /* 2 */
      border-style: solid; /* 2 */
      border-color: currentColor; /* 2 */
    }

    .nota ::before,
    .nota ::after {
      --tw-content: '';
    }

    /*
Reset links to optimize for opt-in styling instead of opt-out.
*/
    .nota a {
      color: inherit;
      text-decoration: inherit;
    }

    /*
Add the correct font weight in Edge and Safari.
*/
    .nota b,
    .nota strong {
      font-weight: bolder;
    }

    /*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

    .nota button,
    .nota input,
    .nota optgroup,
    .nota select,
    .nota textarea {
      font-family: inherit; /* 1 */
      font-size: 100%; /* 1 */
      font-weight: inherit; /* 1 */
      line-height: inherit; /* 1 */
      color: inherit; /* 1 */
      margin: 0; /* 2 */
      padding: 0; /* 3 */
    }

    /*
Remove the inheritance of text transform in Edge and Firefox.
*/

    .nota button,
    .nota select {
      text-transform: none;
    }

    /*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

    .nota button,
    .nota [type='button'],
    .nota [type='reset'],
    .nota [type='submit'] {
      -webkit-appearance: button; /* 1 */
      background-color: transparent; /* 2 */
      background-image: none; /* 2 */
    }

    /*
Removes the default spacing and border for appropriate elements.
*/

    .nota blockquote,
    .nota dl,
    .nota dd,
    .nota h1,
    .nota h2,
    .nota h3,
    .nota h4,
    .nota h5,
    .nota h6,
    .nota hr,
    .nota figure,
    .nota p,
    .nota pre {
      margin: 0;
    }

    .nota fieldset {
      margin: 0;
      padding: 0;
    }

    .nota legend {
      padding: 0;
    }

    .nota ol,
    .nota ul,
    .nota menu {
      list-style: none;
      margin: 0;
      padding: 0;
    }

    /*
Set the default cursor for buttons.
*/
    .nota button,
    .nota [role='button'] {
      cursor: pointer;
    }

    /*
Make sure disabled buttons don't get the pointer cursor.
*/
    .nota :disabled {
      cursor: default;
    }

    /*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
    .nota img,
    .nota svg,
    .nota video,
    .nota canvas,
    .nota audio,
    .nota iframe,
    .nota embed,
    .nota object {
      display: block; /* 1 */
      vertical-align: middle; /* 2 */
    }

    /*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
    .nota img,
    .nota video {
      max-width: 100%;
      height: auto;
    }

*, ::before, ::after {
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-rotate: 0;
      --tw-skew-x: 0;
      --tw-skew-y: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-pan-x:  ;
      --tw-pan-y:  ;
      --tw-pinch-zoom:  ;
      --tw-scroll-snap-strictness: proximity;
      --tw-ordinal:  ;
      --tw-slashed-zero:  ;
      --tw-numeric-figure:  ;
      --tw-numeric-spacing:  ;
      --tw-numeric-fraction:  ;
      --tw-ring-inset:  ;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: rgb(59 130 246 / 0.5);
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-ring-shadow: 0 0 #0000;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-colored: 0 0 #0000;
      --tw-blur:  ;
      --tw-brightness:  ;
      --tw-contrast:  ;
      --tw-grayscale:  ;
      --tw-hue-rotate:  ;
      --tw-invert:  ;
      --tw-saturate:  ;
      --tw-sepia:  ;
      --tw-drop-shadow:  ;
      --tw-backdrop-blur:  ;
      --tw-backdrop-brightness:  ;
      --tw-backdrop-contrast:  ;
      --tw-backdrop-grayscale:  ;
      --tw-backdrop-hue-rotate:  ;
      --tw-backdrop-invert:  ;
      --tw-backdrop-opacity:  ;
      --tw-backdrop-saturate:  ;
      --tw-backdrop-sepia:  ;
}

::backdrop {
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-rotate: 0;
      --tw-skew-x: 0;
      --tw-skew-y: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-pan-x:  ;
      --tw-pan-y:  ;
      --tw-pinch-zoom:  ;
      --tw-scroll-snap-strictness: proximity;
      --tw-ordinal:  ;
      --tw-slashed-zero:  ;
      --tw-numeric-figure:  ;
      --tw-numeric-spacing:  ;
      --tw-numeric-fraction:  ;
      --tw-ring-inset:  ;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: rgb(59 130 246 / 0.5);
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-ring-shadow: 0 0 #0000;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-colored: 0 0 #0000;
      --tw-blur:  ;
      --tw-brightness:  ;
      --tw-contrast:  ;
      --tw-grayscale:  ;
      --tw-hue-rotate:  ;
      --tw-invert:  ;
      --tw-saturate:  ;
      --tw-sepia:  ;
      --tw-drop-shadow:  ;
      --tw-backdrop-blur:  ;
      --tw-backdrop-brightness:  ;
      --tw-backdrop-contrast:  ;
      --tw-backdrop-grayscale:  ;
      --tw-backdrop-hue-rotate:  ;
      --tw-backdrop-invert:  ;
      --tw-backdrop-opacity:  ;
      --tw-backdrop-saturate:  ;
      --tw-backdrop-sepia:  ;
}
.nota :is(.ntw-absolute) {
      position: absolute;
}
.nota :is(.ntw-relative) {
      position: relative;
}
.nota :is(.ntw-sticky) {
      position: sticky;
}
.nota :is(.-ntw-bottom-2px) {
      bottom: -0.125rem;
}
.nota :is(.ntw-bottom-\[23px\]) {
      bottom: 23px;
}
.nota :is(.ntw-left-0) {
      left: 0px;
}
.nota :is(.ntw-left-1\/2) {
      left: 50%;
}
.nota :is(.ntw-top-0) {
      top: 0px;
}
.nota :is(.ntw-top-1\/2) {
      top: 50%;
}
.nota :is(.ntw-top-\[-5px\]) {
      top: -5px;
}
.nota :is(.ntw-top-\[20px\]) {
      top: 20px;
}
.nota :is(.ntw-z-50) {
      z-index: 50;
}
.nota :is(.ntw-z-\[100\]) {
      z-index: 100;
}
.nota :is(.ntw-col-span-2) {
      grid-column: span 2 / span 2;
}
.nota :is(.ntw-mx-2) {
      margin-left: 0.5rem;
      margin-right: 0.5rem;
}
.nota :is(.ntw-mx-auto) {
      margin-left: auto;
      margin-right: auto;
}
.nota :is(.ntw-my-4) {
      margin-top: 1rem;
      margin-bottom: 1rem;
}
.nota :is(.ntw-mb-16px) {
      margin-bottom: 1rem;
}
.nota :is(.ntw-mb-2) {
      margin-bottom: 0.5rem;
}
.nota :is(.ntw-mb-24px) {
      margin-bottom: 1.5rem;
}
.nota :is(.ntw-mb-32px) {
      margin-bottom: 2rem;
}
.nota :is(.ntw-mb-8px) {
      margin-bottom: 0.5rem;
}
.nota :is(.ntw-mb-\[12px\]) {
      margin-bottom: 12px;
}
.nota :is(.ntw-ml-16px) {
      margin-left: 1rem;
}
.nota :is(.ntw-ml-2) {
      margin-left: 0.5rem;
}
.nota :is(.ntw-ml-8px) {
      margin-left: 0.5rem;
}
.nota :is(.ntw-mr-1) {
      margin-right: 0.25rem;
}
.nota :is(.ntw-mr-2) {
      margin-right: 0.5rem;
}
.nota :is(.ntw-mr-8px) {
      margin-right: 0.5rem;
}
.nota :is(.ntw-mt-1) {
      margin-top: 0.25rem;
}
.nota :is(.ntw-mt-2) {
      margin-top: 0.5rem;
}
.nota :is(.ntw-mt-24px) {
      margin-top: 1.5rem;
}
.nota :is(.ntw-mt-4) {
      margin-top: 1rem;
}
.nota :is(.ntw-mt-5) {
      margin-top: 1.25rem;
}
.nota :is(.ntw-mt-\[-25px\]) {
      margin-top: -25px;
}
.nota :is(.ntw-mt-\[2px\]) {
      margin-top: 2px;
}
.nota :is(.ntw-line-clamp-1) {
      overflow: hidden;
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 1;
}
.nota :is(.ntw-line-clamp-2) {
      overflow: hidden;
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 2;
}
.nota :is(.ntw-block) {
      display: block;
}
.nota :is(.ntw-inline) {
      display: inline;
}
.nota :is(.ntw-flex) {
      display: flex;
}
.nota :is(.ntw-inline-flex) {
      display: inline-flex;
}
.nota :is(.ntw-grid) {
      display: grid;
}
.nota :is(.ntw-h-12) {
      height: 3rem;
}
.nota :is(.ntw-h-24px) {
      height: 1.5rem;
}
.nota :is(.ntw-h-2px) {
      height: 0.125rem;
}
.nota :is(.ntw-h-4) {
      height: 1rem;
}
.nota :is(.ntw-h-5) {
      height: 1.25rem;
}
.nota :is(.ntw-h-\[16px\]) {
      height: 16px;
}
.nota :is(.ntw-h-\[28px\]) {
      height: 28px;
}
.nota :is(.ntw-h-\[38px\]) {
      height: 38px;
}
.nota :is(.ntw-h-\[6px\]) {
      height: 6px;
}
.nota :is(.ntw-h-\[8px\]) {
      height: 8px;
}
.nota :is(.ntw-h-full) {
      height: 100%;
}
.nota :is(.ntw-h-px) {
      height: 1px;
}
.nota :is(.ntw-max-h-\[300px\]) {
      max-height: 300px;
}
.nota :is(.ntw-w-12) {
      width: 3rem;
}
.nota :is(.ntw-w-16px) {
      width: 1rem;
}
.nota :is(.ntw-w-24px) {
      width: 1.5rem;
}
.nota :is(.ntw-w-5) {
      width: 1.25rem;
}
.nota :is(.ntw-w-\[180px\]) {
      width: 180px;
}
.nota :is(.ntw-w-\[260px\]) {
      width: 260px;
}
.nota :is(.ntw-w-\[88px\]) {
      width: 88px;
}
.nota :is(.ntw-w-\[8px\]) {
      width: 8px;
}
.nota :is(.ntw-w-fit) {
      width: -moz-fit-content;
      width: fit-content;
}
.nota :is(.ntw-w-full) {
      width: 100%;
}
.nota :is(.ntw-min-w-\[1px\]) {
      min-width: 1px;
}
.nota :is(.ntw-max-w-\[200px\]) {
      max-width: 200px;
}
.nota :is(.ntw-flex-1) {
      flex: 1 1 0%;
}
.nota :is(.ntw-flex-shrink-0) {
      flex-shrink: 0;
}
.nota :is(.ntw-shrink-0) {
      flex-shrink: 0;
}
.nota :is(.ntw-grow) {
      flex-grow: 1;
}
.nota :is(.-ntw-translate-y-16px) {
      --tw-translate-y: -1rem;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.nota :is(.ntw--translate-x-1\/2) {
      --tw-translate-x: -50%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.nota :is(.ntw-translate-y-0) {
      --tw-translate-y: 0px;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.nota :is(.ntw-transform) {
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes ntw-pulse {

      50% {
            opacity: .5;
      }
}
.nota :is(.ntw-animate-pulse) {
      animation: ntw-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
@keyframes ntw-spin {

      to {
            transform: rotate(360deg);
      }
}
.nota :is(.ntw-animate-spin) {
      animation: ntw-spin 1s linear infinite;
}
.nota :is(.ntw-cursor-not-allowed) {
      cursor: not-allowed;
}
.nota :is(.ntw-cursor-pointer) {
      cursor: pointer;
}
.nota :is(.ntw-cursor-wait) {
      cursor: wait;
}
.nota :is(.ntw-select-none) {
      -webkit-user-select: none;
         -moz-user-select: none;
              user-select: none;
}
.nota :is(.ntw-resize-none) {
      resize: none;
}
.nota :is(.ntw-appearance-none) {
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
}
.nota :is(.ntw-grid-cols-2) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
}
.nota :is(.ntw-grid-cols-\[1fr_auto\]) {
      grid-template-columns: 1fr auto;
}
.nota :is(.ntw-grid-cols-auto-fit-250px) {
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}
.nota :is(.ntw-flex-col) {
      flex-direction: column;
}
.nota :is(.ntw-flex-wrap) {
      flex-wrap: wrap;
}
.nota :is(.ntw-items-start) {
      align-items: flex-start;
}
.nota :is(.ntw-items-center) {
      align-items: center;
}
.nota :is(.ntw-justify-center) {
      justify-content: center;
}
.nota :is(.ntw-justify-between) {
      justify-content: space-between;
}
.nota :is(.ntw-gap-1) {
      gap: 0.25rem;
}
.nota :is(.ntw-gap-12px) {
      gap: 0.75rem;
}
.nota :is(.ntw-gap-16px) {
      gap: 1rem;
}
.nota :is(.ntw-gap-2) {
      gap: 0.5rem;
}
.nota :is(.ntw-gap-24px) {
      gap: 1.5rem;
}
.nota :is(.ntw-gap-4px) {
      gap: 0.25rem;
}
.nota :is(.ntw-gap-5) {
      gap: 1.25rem;
}
.nota :is(.ntw-gap-64px) {
      gap: 4rem;
}
.nota :is(.ntw-gap-8px) {
      gap: 0.5rem;
}
.nota :is(.ntw-gap-\[8px\]) {
      gap: 8px;
}
.nota :is(.ntw-space-x-16px > :not([hidden]) ~ :not([hidden])) {
      --tw-space-x-reverse: 0;
      margin-right: calc(1rem * var(--tw-space-x-reverse));
      margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}
.nota :is(.ntw-space-x-24px > :not([hidden]) ~ :not([hidden])) {
      --tw-space-x-reverse: 0;
      margin-right: calc(1.5rem * var(--tw-space-x-reverse));
      margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.nota :is(.ntw-space-x-4 > :not([hidden]) ~ :not([hidden])) {
      --tw-space-x-reverse: 0;
      margin-right: calc(1rem * var(--tw-space-x-reverse));
      margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}
.nota :is(.ntw-space-y-16px > :not([hidden]) ~ :not([hidden])) {
      --tw-space-y-reverse: 0;
      margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.nota :is(.ntw-space-y-2 > :not([hidden]) ~ :not([hidden])) {
      --tw-space-y-reverse: 0;
      margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}
.nota :is(.ntw-space-y-24px > :not([hidden]) ~ :not([hidden])) {
      --tw-space-y-reverse: 0;
      margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}
.nota :is(.ntw-space-y-32px > :not([hidden]) ~ :not([hidden])) {
      --tw-space-y-reverse: 0;
      margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}
.nota :is(.ntw-space-y-\[2px\] > :not([hidden]) ~ :not([hidden])) {
      --tw-space-y-reverse: 0;
      margin-top: calc(2px * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(2px * var(--tw-space-y-reverse));
}
.nota :is(.ntw-overflow-auto) {
      overflow: auto;
}
.nota :is(.ntw-overflow-hidden) {
      overflow: hidden;
}
.nota :is(.ntw-overflow-y-auto) {
      overflow-y: auto;
}
.nota :is(.ntw-truncate) {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
}
.nota :is(.ntw-rounded) {
      border-radius: 0.25rem;
}
.nota :is(.ntw-rounded-2xl) {
      border-radius: 1rem;
}
.nota :is(.ntw-rounded-\[80px\]) {
      border-radius: 80px;
}
.nota :is(.ntw-rounded-full) {
      border-radius: 9999px;
}
.nota :is(.ntw-rounded-lg) {
      border-radius: 0.5rem;
}
.nota :is(.ntw-rounded-md) {
      border-radius: 0.375rem;
}
.nota :is(.ntw-rounded-sm) {
      border-radius: 0.125rem;
}
.nota :is(.ntw-rounded-l-md) {
      border-top-left-radius: 0.375rem;
      border-bottom-left-radius: 0.375rem;
}
.nota :is(.ntw-rounded-r-md) {
      border-top-right-radius: 0.375rem;
      border-bottom-right-radius: 0.375rem;
}
.nota :is(.ntw-border) {
      border-width: 1px;
}
.nota :is(.ntw-border-t) {
      border-top-width: 1px;
}
.nota :is(.ntw-border-none) {
      border-style: none;
}
.nota :is(.ntw-border-elements-default) {
      --tw-border-opacity: 1;
      border-color: rgb(235 235 235 / var(--tw-border-opacity));
}
.nota :is(.ntw-border-grade-warning-900) {
      --tw-border-opacity: 1;
      border-color: rgb(208 100 0 / var(--tw-border-opacity));
}
.nota :is(.ntw-border-gray-100) {
      --tw-border-opacity: 1;
      border-color: rgb(233 233 233 / var(--tw-border-opacity));
}
.nota :is(.ntw-border-ui-default) {
      --tw-border-opacity: 1;
      border-color: rgb(192 192 192 / var(--tw-border-opacity));
}
.nota :is(.ntw-bg-\[\#F1F3F4\]) {
      --tw-bg-opacity: 1;
      background-color: rgb(241 243 244 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-\[\#FFFFFF\]) {
      --tw-bg-opacity: 1;
      background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-background-light) {
      --tw-bg-opacity: 1;
      background-color: rgb(254 254 254 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-background-mistVeil) {
      --tw-bg-opacity: 1;
      background-color: rgb(249 249 251 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-background-selected) {
      --tw-bg-opacity: 1;
      background-color: rgb(233 241 255 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-button-default) {
      --tw-bg-opacity: 1;
      background-color: rgb(0 141 142 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-elements-default) {
      --tw-bg-opacity: 1;
      background-color: rgb(235 235 235 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-grade-warning-100) {
      --tw-bg-opacity: 1;
      background-color: rgb(252 249 247 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-grade-warning-200) {
      --tw-bg-opacity: 1;
      background-color: rgb(244 233 224 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-gravity-100) {
      --tw-bg-opacity: 1;
      background-color: rgb(230 244 245 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-gravity-200) {
      --tw-bg-opacity: 1;
      background-color: rgb(204 232 233 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-gravity-600) {
      --tw-bg-opacity: 1;
      background-color: rgb(103 187 187 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-status-error-100) {
      --tw-bg-opacity: 1;
      background-color: rgb(253 238 234 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-status-informational-100) {
      --tw-bg-opacity: 1;
      background-color: rgb(232 231 230 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-status-success-200) {
      --tw-bg-opacity: 1;
      background-color: rgb(204 232 233 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-status-supernova-600) {
      --tw-bg-opacity: 1;
      background-color: rgb(198 139 255 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-status-supernova-800) {
      --tw-bg-opacity: 1;
      background-color: rgb(177 100 255 / var(--tw-bg-opacity));
}
.nota :is(.ntw-bg-transparent) {
      background-color: transparent;
}
.nota :is(.ntw-bg-opacity-50) {
      --tw-bg-opacity: 0.5;
}
.nota :is(.ntw-object-contain) {
      -o-object-fit: contain;
         object-fit: contain;
}
.nota :is(.ntw-p-16px) {
      padding: 1rem;
}
.nota :is(.ntw-p-2) {
      padding: 0.5rem;
}
.nota :is(.ntw-p-24px) {
      padding: 1.5rem;
}
.nota :is(.ntw-p-3) {
      padding: 0.75rem;
}
.nota :is(.ntw-p-4) {
      padding: 1rem;
}
.nota :is(.ntw-p-4px) {
      padding: 0.25rem;
}
.nota :is(.ntw-p-8px) {
      padding: 0.5rem;
}
.nota :is(.ntw-px-1) {
      padding-left: 0.25rem;
      padding-right: 0.25rem;
}
.nota :is(.ntw-px-16px) {
      padding-left: 1rem;
      padding-right: 1rem;
}
.nota :is(.ntw-px-2) {
      padding-left: 0.5rem;
      padding-right: 0.5rem;
}
.nota :is(.ntw-px-8px) {
      padding-left: 0.5rem;
      padding-right: 0.5rem;
}
.nota :is(.ntw-px-\[12px\]) {
      padding-left: 12px;
      padding-right: 12px;
}
.nota :is(.ntw-py-1) {
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
}
.nota :is(.ntw-py-12px) {
      padding-top: 0.75rem;
      padding-bottom: 0.75rem;
}
.nota :is(.ntw-py-4px) {
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
}
.nota :is(.ntw-py-8px) {
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
}
.nota :is(.ntw-py-\[8px\]) {
      padding-top: 8px;
      padding-bottom: 8px;
}
.nota :is(.ntw-pr-8px) {
      padding-right: 0.5rem;
}
.nota :is(.ntw-pt-16px) {
      padding-top: 1rem;
}
.nota :is(.ntw-pt-4px) {
      padding-top: 0.25rem;
}
.nota :is(.ntw-pt-8px) {
      padding-top: 0.5rem;
}
.nota :is(.ntw-text-left) {
      text-align: left;
}
.nota :is(.ntw-text-center) {
      text-align: center;
}
.nota :is(.ntw-text-right) {
      text-align: right;
}
.nota :is(.ntw-font-google) {
      font-family: Arial, sans-serif;
}
.nota :is(.ntw-text-2xl) {
      font-size: 1.5rem;
      line-height: 2rem;
}
.nota :is(.ntw-text-base) {
      font-size: 1rem;
      line-height: 1.5rem;
}
.nota :is(.ntw-text-h-800) {
      font-size: 1.5rem;
      line-height: 2rem;
      font-weight: 700;
}
.nota :is(.ntw-text-h-900) {
      font-size: 1.75rem;
      line-height: 2rem;
      font-weight: 700;
}
.nota :is(.ntw-text-lg) {
      font-size: 1.125rem;
      line-height: 1.75rem;
}
.nota :is(.ntw-text-paragraph-base) {
      font-size: 1rem;
      line-height: 1.5rem;
      font-weight: 500;
}
.nota :is(.ntw-text-paragraph-large) {
      font-size: 1.25rem;
      line-height: 1.5rem;
      font-weight: 400;
}
.nota :is(.ntw-text-paragraph-medium) {
      font-size: 1.125rem;
      line-height: 1.125rem;
      font-weight: 600;
}
.nota :is(.ntw-text-paragraph-sm) {
      font-size: 0.875rem;
      line-height: 0.9375rem;
      font-weight: 500;
}
.nota :is(.ntw-text-paragraph-tight) {
      font-size: 1rem;
      line-height: 1rem;
      font-weight: 400;
}
.nota :is(.ntw-text-paragraph-xs) {
      font-size: 0.75rem;
      line-height: 0.75rem;
      font-weight: 500;
}
.nota :is(.ntw-text-paragraph-xs-regular) {
      font-size: 0.75rem;
      line-height: 1rem;
      font-weight: 400;
}
.nota :is(.ntw-text-sm) {
      font-size: 0.875rem;
      line-height: 1.25rem;
}
.nota :is(.ntw-text-xs) {
      font-size: 0.75rem;
      line-height: 1rem;
}
.nota :is(.ntw-font-bold) {
      font-weight: 700;
}
.nota :is(.ntw-font-light) {
      font-weight: 300;
}
.nota :is(.ntw-font-medium) {
      font-weight: 500;
}
.nota :is(.ntw-font-normal) {
      font-weight: 400;
}
.nota :is(.ntw-font-semibold) {
      font-weight: 600;
}
.nota :is(.ntw-uppercase) {
      text-transform: uppercase;
}
.nota :is(.ntw-capitalize) {
      text-transform: capitalize;
}
.nota :is(.ntw-italic) {
      font-style: italic;
}
.nota :is(.ntw-leading-4) {
      line-height: 1rem;
}
.nota :is(.ntw-tracking-wider) {
      letter-spacing: 0.05em;
}
.nota :is(.ntw-text-\[\#030B1B\]) {
      --tw-text-opacity: 1;
      color: rgb(3 11 27 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-\[\#1A0DAB\]) {
      --tw-text-opacity: 1;
      color: rgb(26 13 171 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-\[\#FFFFFF\]) {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-button-default) {
      --tw-text-opacity: 1;
      color: rgb(0 141 142 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-button-destructive) {
      --tw-text-opacity: 1;
      color: rgb(216 62 53 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-button-destructive-hover) {
      --tw-text-opacity: 1;
      color: rgb(188 52 44 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-button-hover) {
      --tw-text-opacity: 1;
      color: rgb(50 164 165 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-grade-error) {
      --tw-text-opacity: 1;
      color: rgb(216 62 53 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-grade-success) {
      --tw-text-opacity: 1;
      color: rgb(9 163 55 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-grade-warning-900) {
      --tw-text-opacity: 1;
      color: rgb(208 100 0 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-gravity-600) {
      --tw-text-opacity: 1;
      color: rgb(103 187 187 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-gravity-900) {
      --tw-text-opacity: 1;
      color: rgb(0 141 142 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-status-error-900) {
      --tw-text-opacity: 1;
      color: rgb(237 86 41 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-typography-dark) {
      --tw-text-opacity: 1;
      color: rgb(5 14 33 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-typography-disabled) {
      --tw-text-opacity: 1;
      color: rgb(139 139 139 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-typography-light) {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-typography-medium) {
      --tw-text-opacity: 1;
      color: rgb(94 96 100 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-typography-medium-light) {
      --tw-text-opacity: 1;
      color: rgb(145 148 152 / var(--tw-text-opacity));
}
.nota :is(.ntw-text-typography-public-primary) {
      --tw-text-opacity: 1;
      color: rgb(0 141 142 / var(--tw-text-opacity));
}
.nota :is(.ntw-opacity-0) {
      opacity: 0;
}
.nota :is(.ntw-opacity-100) {
      opacity: 1;
}
.nota :is(.ntw-opacity-25) {
      opacity: 0.25;
}
.nota :is(.ntw-opacity-50) {
      opacity: 0.5;
}
.nota :is(.ntw-opacity-75) {
      opacity: 0.75;
}
.nota :is(.ntw-shadow) {
      --tw-shadow: 0px 0px 4px rgba(0, 0, 0, 0.160);
      --tw-shadow-colored: 0px 0px 4px var(--tw-shadow-color);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.nota :is(.ntw-shadow-default) {
      --tw-shadow: 0px 0px 6px rgba(0, 12, 34, 0.1);;
      --tw-shadow-colored: 0px 0px 6px var(--tw-shadow-color);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.nota :is(.ntw-shadow-none) {
      --tw-shadow: 0 0 #0000;
      --tw-shadow-colored: 0 0 #0000;
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.nota :is(.ntw-outline-none) {
      outline: 2px solid transparent;
      outline-offset: 2px;
}
.nota :is(.ntw-ring-1) {
      --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
      box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.nota :is(.ntw-ring-2) {
      --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
      box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.nota :is(.ntw-ring-button-default) {
      --tw-ring-opacity: 1;
      --tw-ring-color: rgb(0 141 142 / var(--tw-ring-opacity));
}
.nota :is(.ntw-ring-status-supernova-800) {
      --tw-ring-opacity: 1;
      --tw-ring-color: rgb(177 100 255 / var(--tw-ring-opacity));
}
.nota :is(.ntw-ring-offset-1) {
      --tw-ring-offset-width: 1px;
}
.nota :is(.ntw-transition) {
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
}
.nota :is(.ntw-transition-transform) {
      transition-property: transform;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
}
.nota :is(.ntw-duration-100) {
      transition-duration: 100ms;
}
.nota :is(.ntw-duration-1000) {
      transition-duration: 1000ms;
}
.nota :is(.ntw-ease-in) {
      transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}
.nota :is(.ntw-ease-in-out) {
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.nota :is(.ntw-ease-out) {
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.nota {
      font-family: Manrope, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
      font-size: 1rem;
      line-height: 1.5rem;
      font-weight: 500;
      --tw-text-opacity: 1;
      color: rgb(5 14 33 / var(--tw-text-opacity));
}

.nota.sidebar .components-button {
  font-size: 14px;
  font-style: normal;
  font-weight: 600;
  line-height: normal;
}

.nota-highlight-bg {
  animation-name: pulse;
  animation-duration: 3s;
  animation-iteration-count: 1;
  border-radius: 5px;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0px rgba(0, 141, 142, .5);
  }
  100% {
    box-shadow: 0 0 0 20px rgba(0, 141, 142, 0);
  }
}

.nota :is(.hover\:ntw-bg-button-hover:hover) {
      --tw-bg-opacity: 1;
      background-color: rgb(50 164 165 / var(--tw-bg-opacity));
}

.nota :is(.hover\:ntw-text-button-hover:hover) {
      --tw-text-opacity: 1;
      color: rgb(50 164 165 / var(--tw-text-opacity));
}

.nota :is(.hover\:ntw-ring-1:hover) {
      --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
      box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.nota :is(.hover\:ntw-ring-button-hover:hover) {
      --tw-ring-opacity: 1;
      --tw-ring-color: rgb(50 164 165 / var(--tw-ring-opacity));
}

.nota :is(.ntw-group:hover .group-hover\:ntw-opacity-100) {
      opacity: 1;
}

.nota :is(.\[\&\>h2\>button\>svg\]\:ntw-text-\[\#FFFFFF\]>h2>button>svg) {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity));
}

.nota :is(.\[\&\>h2\>button\]\:ntw-flex-row-reverse>h2>button) {
      flex-direction: row-reverse;
}

.nota :is(.\[\&\>h2\>button\]\:ntw-justify-end>h2>button) {
      justify-content: flex-end;
}
